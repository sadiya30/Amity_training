import numpy as np
import pandas as pd
import sys
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

def metricP (pred,actual):
   TP = TN = FP = FN = 0
   for i in range(0,len(actual),1):
      if( (actual[i]==1) and (actual[i]==pred[i]) ):
         TP+=1
      if( (actual[i]==0) and (actual[i]==pred[i]) ):
         TN+=1
      if( (actual[i]==1) and (actual[i]!=pred[i]) ):
         FN+=1
      if( (actual[i]==0) and (actual[i]!=pred[i]) ):
         FP+=1

   sens = spec =accuracy = precision = recall = 0
   sens = TP/(TP + FN)
   spec = TN/(TN + FP)
   accuracy = (TP + TN) / (TP+TN+FP+FN)
   precision = TP / (TP + FP)
   recall = TP / (TP + FN)
   F1 = 2 * (precision * recall) / (precision + recall)
   print("Tot: ",len(Y_test)," TP: ",TP," TN: ",TN," FN: ",FN," FP: ",FP," Sensitivity: ",sens," Specificity: ",spec," Acc: ",accuracy," Precision: ",precision," Recall: ",recall," F1-score: ",F1)
   return 0


df = pd.read_csv('dataFILE.csv')
ind_list = np.random.randint(df.shape[0], size=df.shape[0])
df = df.iloc[ind_list]

X = df.drop('Class', axis=1)
y = dat['Class'].values.tolist()

X_trn, X_test, Y_trn, Y_test = train_test_split(X, y, test_size = 0.20)

print("The dimension of the training data Rows: %d Features: %d"%(X_trn.shape[0],X_trn.shape[1]))

clf=RandomForestClassifier(n_estimators=100)
clf.fit(X_trn,Y_trn)
print('Accuracy of RF on training set: %.5f'%(clf.score(X_trn, Y_trn)))
print('Accuracy of RF on test set: %.5f'%(clf.score(X_test, Y_test)))
p = (clf.predict(X_test))
metricP(p,Y_test)
